<<<<<<< HEAD
# Generated by Django 4.2.2 on 2023-07-16 06:45
=======
# Generated by Django 4.2.2 on 2023-07-11 15:30
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'корзина',
                'verbose_name_plural': 'в корзине',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'избранное',
                'verbose_name_plural': 'избранное',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='название')),
                ('measurement_unit', models.CharField(max_length=100, verbose_name='единицы измерения')),
=======
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='название')),
                ('units', models.CharField(max_length=100, verbose_name='единицы измерения')),
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
            ],
            options={
                'verbose_name': 'ингредиент',
                'verbose_name_plural': 'ингредиенты',
<<<<<<< HEAD
                'ordering': ['name'],
=======
                'ordering': ['title'],
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(max_length=100, unique=True, verbose_name='название')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='цвет')),
=======
                ('title', models.CharField(max_length=100, verbose_name='название')),
                ('hex', models.CharField(max_length=7, unique=True, verbose_name='цвет')),
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='ссылка')),
            ],
            options={
                'verbose_name': 'тэг',
                'verbose_name_plural': 'тэги',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(max_length=100, verbose_name='название')),
=======
                ('title', models.CharField(max_length=100, verbose_name='название')),
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
                ('image', models.ImageField(blank=True, upload_to='recipes/', verbose_name='картинка')),
                ('text', models.TextField()),
                ('cooking_time', models.PositiveSmallIntegerField(verbose_name='время приготовления')),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
                ('ingredients', models.ManyToManyField(related_name='recipes', to='recipes.ingredient')),
                ('tags', models.ManyToManyField(related_name='recipes', to='recipes.tag')),
            ],
            options={
                'verbose_name': 'рецепт',
                'verbose_name_plural': 'рецепты',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='IngredientToRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Минимальное количество 1')], verbose_name='количество')),
=======
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Минимальное количество 1')], verbose_name='количество')),
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_recipe', to='recipes.recipe')),
            ],
            options={
                'verbose_name': 'связь рецепта и ингредиента',
                'verbose_name_plural': 'связи рецептов и ингредиентов',
            },
        ),
        migrations.AddConstraint(
            model_name='ingredient',
<<<<<<< HEAD
            constraint=models.UniqueConstraint(fields=('name', 'measurement_unit'), name='unique_ingredient'),
=======
            constraint=models.UniqueConstraint(fields=('title', 'units'), name='unique_ingredient'),
>>>>>>> 7d7d4d8233cec01027a5da081f4ff941a6f8d6ee
        ),
        migrations.AddField(
            model_name='favorite',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipes.recipe', verbose_name='рецепт'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AddField(
            model_name='cart',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to='recipes.recipe', verbose_name='рецепт'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='пользователь'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique favorite recipe for user'),
        ),
        migrations.AddConstraint(
            model_name='cart',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique cart user'),
        ),
    ]
